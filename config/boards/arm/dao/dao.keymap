/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <15 16>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 4>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <27 28>;
        };

        caps {
            bindings = <&caps_word>;
            key-positions = <16 19>;
        };

        right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <31 32>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <7 8>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TILDE           &kp Q           &kp W               &kp E             &kp R        &kp T            &kp Y             &kp U               &kp I           &kp O              &kp P  &mt RIGHT_BRACKET LEFT_BRACKET
&kp MINUS  &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F        &kp G            &kp H  &mt LEFT_SHIFT J  &mt LEFT_CONTROL K  &mt LEFT_ALT L  &mt LEFT_GUI SEMI                &kp SINGLE_QUOTE
&kp EQUAL           &kp Z           &kp X               &kp C             &kp V        &kp B            &kp N             &kp M           &kp COMMA         &kp DOT          &kp SLASH                   &kp BACKSLASH
                                                      &kp TAB       &lt 2 ENTER  &lt 1 SPACE  &lt 1 BACKSPACE      &lt 2 DELETE          &kp ESCAPE
            >;
        };

        raise_layer {
            bindings = <
&none         &none         &none   &kp LS(LA(TAB))             &kp LA(TAB)                    &none  &kp INSERT          &none        &none      &none  &none  &kp BACKSPACE
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL          &kp LEFT_SHIFT                    &none    &kp LEFT       &kp DOWN       &kp UP  &kp RIGHT  &none     &kp DELETE
&none         &none         &none             &none  &kp LG(LC(LEFT_ARROW))  &kp LC(LG(RIGHT_ARROW))    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP    &kp END  &none          &none
                                             &trans             &lt 3 ENTER                   &trans      &trans   &lt 3 DELETE       &trans
            >;
        };

        lower_layer {
            bindings = <
         &kp F1    &kp F2  &kp F3    &kp F4    &kp F5       &kp F6           &kp F7    &kp F8    &kp F9   &kp F10       &kp F11          &kp F12
&mt LCTRL EQUAL  &kp EXCL  &kp AT  &kp HASH  &kp DLLR    &kp PRCNT        &kp CARET  &kp AMPS  &kp STAR  &kp LPAR      &kp RPAR  &mt RCTRL MINUS
 &mt LALT EQUAL    &kp N4  &kp N2    &kp N3    &kp N1       &kp N5           &kp N6    &kp N0    &kp N8    &kp N9  &kp NUMBER_7         &kp RALT
                                     &trans    &trans  &lt 3 SPACE  &lt 3 BACKSPACE    &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader         &none         &none         &none    &kp C_VOLUME_UP  &kp PRINTSCREEN         &none         &none         &none         &none         &none  &bootloader
 &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0   &bt BT_CLR
 &sys_reset         &none         &none         &none  &kp C_VOLUME_DOWN       &kp K_MUTE         &none         &none         &none         &none         &none   &sys_reset
                                               &trans             &trans           &trans         &none        &trans        &trans
            >;
        };
    };
};